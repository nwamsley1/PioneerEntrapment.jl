var documenterSearchIndex = {"docs":
[{"location":"#PioneerEntrapment.jl","page":"Home","title":"PioneerEntrapment.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Entrapment-based empirical FDR analysis for DIA proteomics.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"] add https://github.com/nwamsley1/PioneerEntrapment.jl","category":"page"},{"location":"#Julia-REPL-(quick-start)","page":"Home","title":"Julia REPL (quick start)","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using PioneerEntrapment\nrun_efdr_analysis(\"precursors.arrow\", \"library.arrow\"; output_dir=\"out\")\nrun_protein_efdr_analysis(\"proteins.arrow\"; output_dir=\"out\")\nrun_both_analyses(; precursor_results_path=\"precursors.arrow\", library_precursors_path=\"library.arrow\", protein_results_path=\"proteins.arrow\", output_dir=\"out\")","category":"page"},{"location":"#CLI-(single-run)","page":"Home","title":"CLI (single run)","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"pioneer-entrapment --mode precursor --precursor-results prec.arrow --library lib.arrow --outdir out\npioneer-entrapment --mode protein --protein-results protein.arrow --outdir out\npioneer-entrapment --mode both --precursor-results prec.arrow --library lib.arrow --protein-results protein.arrow --outdir out","category":"page"},{"location":"#API-Reference","page":"Home","title":"API Reference","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"run_efdr_analysis\nrun_protein_efdr_analysis\nrun_both_analyses","category":"page"},{"location":"#PioneerEntrapment._load_table-Tuple{AbstractString}","page":"Home","title":"PioneerEntrapment._load_table","text":"Load a tabular file into a DataFrame. Supports Arrow/Feather (.arrow, .feather) and delimited text (.csv, .tsv, .txt). Also accepts a directory path (e.g., a .poin folder) and will locate a suitable table inside, preferring precursors_table.arrow, then any .arrow/.feather, then .tsv/.csv. Falls back to trying Arrow, then CSV regardless of extension.\n\n\n\n\n\n","category":"method"},{"location":"#PioneerEntrapment.add_entrap_pair_ids!-Tuple{DataFrames.DataFrame, DataFrames.DataFrame}","page":"Home","title":"PioneerEntrapment.add_entrap_pair_ids!","text":"add_entrap_pair_ids!(prec_results::DataFrame, library_precursors::DataFrame)\n\n\n\n\n\n","category":"method"},{"location":"#PioneerEntrapment.add_original_target_scores!-Tuple{DataFrames.DataFrame, DataFrames.DataFrame}","page":"Home","title":"PioneerEntrapment.add_original_target_scores!","text":"add_original_target_scores!(prec_results::DataFrame, library_precursors::DataFrame; score_col=:score)\n\n\n\n\n\n","category":"method"},{"location":"#PioneerEntrapment.assign_entrapment_pairs!-Tuple{DataFrames.DataFrame}","page":"Home","title":"PioneerEntrapment.assign_entrapment_pairs!","text":"assign_entrapment_pairs!(df::DataFrame)\n\n\n\n\n\n","category":"method"},{"location":"#PioneerEntrapment.calculate_efdr-Tuple{CombinedEFDR}","page":"Home","title":"PioneerEntrapment.calculate_efdr","text":"calculate_efdr(method::EFDRMethod)\n\nCalculate empirical FDR using the data stored in the method struct.\n\nMethods:\n\nCombinedEFDR: Standard combined empirical FDR calculation\nPairedEFDR: Paired empirical FDR that considers score relationships\n\nReturns a vector of EFDR values aligned to the input order.\n\n\n\n\n\n","category":"method"},{"location":"#PioneerEntrapment.create_global_results_df-Tuple{DataFrames.DataFrame}","page":"Home","title":"PioneerEntrapment.create_global_results_df","text":"create_global_results_df(prec_results::DataFrame; score_col::Symbol=:global_prob)\n\n\n\n\n\n","category":"method"},{"location":"#PioneerEntrapment.generate_markdown_report-Tuple{DataFrames.DataFrame, DataFrames.DataFrame, Dict, Dict, Vector{Tuple{Symbol, Symbol}}, Vector, Int64, String, String}","page":"Home","title":"PioneerEntrapment.generate_markdown_report","text":"generate_markdown_report(prec_results, library_precursors, comparison_results,\n                       calibration_results, score_qval_pairs, method_types,\n                       original_rows, output_dir, output_path)\n\n\n\n\n\n","category":"method"},{"location":"#PioneerEntrapment.getModKey-Tuple{AbstractString}","page":"Home","title":"PioneerEntrapment.getModKey","text":"getModKey(mod_string::AbstractString)\n\n\n\n\n\n","category":"method"},{"location":"#PioneerEntrapment.get_complement_score-Tuple{DataFrames.DataFrame, Int64}","page":"Home","title":"PioneerEntrapment.get_complement_score","text":"get_complement_score(prec_results::DataFrame, row_idx::Int; score_col=:score)\n\n\n\n\n\n","category":"method"},{"location":"#PioneerEntrapment.plot_efdr_comparison_replicates-Tuple{Vector{DataFrames.DataFrame}, Symbol, Symbol}","page":"Home","title":"PioneerEntrapment.plot_efdr_comparison_replicates","text":"Plot EFDR comparison across multiple replicate DataFrames on a single plot. Colors are per method; linestyles per replicate.\n\n\n\n\n\n","category":"method"},{"location":"#PioneerEntrapment.run_both_analyses-Tuple{}","page":"Home","title":"PioneerEntrapment.run_both_analyses","text":"run_both_analyses(; precursor_results_path::AbstractString,\n                    library_precursors_path::AbstractString,\n                    protein_results_path::AbstractString,\n                    output_dir::AbstractString = \"efdr_out\",\n                    r_lib::Float64 = 1.0,\n                    plot_formats::Vector{Symbol} = [:png, :pdf],\n                    verbose::Bool = true)\n\nRun both the precursor-level and protein-level analyses. Returns a NamedTuple with both results, writing outputs into output_dir/precursor and output_dir/protein.\n\n\n\n\n\n","category":"method"},{"location":"#PioneerEntrapment.run_efdr_analysis-Tuple{String, String}","page":"Home","title":"PioneerEntrapment.run_efdr_analysis","text":"run_efdr_analysis(prec_results_path::String, library_precursors_path::String;\n                  output_dir::String=\"efdr_out\",\n                  method_types=[CombinedEFDR, PairedEFDR],\n                  score_qval_pairs=[(:global_prob, :global_qval), (:prec_prob, :qval)],\n                  r_lib::Float64=1.0,\n                  plot_formats=[:png, :pdf],\n                  verbose::Bool=true)\n\nRun empirical FDR analysis on precursor-level data with entrapment sequences. Accepts Arrow/CSV inputs for convenience.\n\n\n\n\n\n","category":"method"},{"location":"#PioneerEntrapment.run_efdr_replicate_plots-Tuple{Vector}","page":"Home","title":"PioneerEntrapment.run_efdr_replicate_plots","text":"run_efdr_replicate_plots(replicates; output_dir=\"efdr_out\", score_qval_pairs=[(:global_prob, :global_qval), (:prec_prob, :qval)], r_lib=1.0, paired_stride=5, plot_formats=[:png,:pdf], verbose=true)\n\nCompute EFDR for multiple (precursorresultspath, libraryprecursorspath) replicates and plot on shared figures.\n\nreplicates is a Vector of NamedTuples with fields:\n\nprecursor_results_path::String\nlibrary_precursors_path::String\nlabel::String (optional, used in plot legend)\n\n\n\n\n\n","category":"method"},{"location":"#PioneerEntrapment.run_protein_efdr_analysis-Tuple{String}","page":"Home","title":"PioneerEntrapment.run_protein_efdr_analysis","text":"run_protein_efdr_analysis(protein_results_path::String;\n                          output_dir::String=\"efdr_out\",\n                          method_types=[CombinedEFDR, PairedEFDR],\n                          score_qval_pairs=[(:global_pg_score, :global_qval), (:pg_score, :qval)],\n                          r_lib::Float64=1.0,\n                          plot_formats=[:png, :pdf],\n                          verbose::Bool=true)\n\n\n\n\n\n","category":"method"},{"location":"#Example:-Julia-REPL-on-local-data","page":"Home","title":"Example: Julia REPL on local data","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Run EFDR from a Julia REPL using a .poin library directory (auto-detects precursors_table.arrow) and a results folder with precursors_long.arrow.","category":"page"},{"location":"","page":"Home","title":"Home","text":"cd /Users/nathanwamsley/Projects/PioneerEntrapment.jl\njulia --project=. -q","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg; Pkg.instantiate()\nusing PioneerEntrapment\n\nlibrary = \"/Users/nathanwamsley/Data/SPEC_LIBS/entrapment_08-20-2025/altimeter_yeast_len7o40_ch2o3_mc1_MTACAstral_Aug302025_entrapR1.poin/altimeter_yeast_len7o40_ch2o3_mc1_MTACAstral_Aug302025_entrapR1.poin.poin\"\nprecursors = \"/Users/nathanwamsley/Data/MS_DATA/MTAC_Y_Astral/YEAST_3MIN/MTAC_Y_entrapR1_feature-fix-mbr_D_08-30-2025/precursors_long.arrow\"\n# If TSV instead, use:\n# precursors = \"/Users/nathanwamsley/Data/MS_DATA/MTAC_Y_Astral/YEAST_3MIN/MTAC_Y_entrapR1_feature-fix-mbr_D_08-30-2025/precursors_long.tsv\"\nout = \"/Users/nathanwamsley/Data/MS_DATA/MTAC_Y_Astral/YEAST_3MIN/MTAC_Y_entrapR1_feature-fix-mbr_D_08-30-2025/efdr_out\"\n\nrun_efdr_analysis(precursors, library;\n    output_dir=out,\n    r_lib=1.0,\n    paired_stride=10,      # sampling stride for paired EFDR\n    plot_formats=[:png, :pdf],\n    verbose=true,\n)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Notes","category":"page"},{"location":"","page":"Home","title":"Home","text":"Passing the library as the .poin.poin directory is supported; the loader resolves precursors_table.arrow internally.\nPrefer precursors_long.arrow when available; .tsv also works.","category":"page"},{"location":"#Live-Reload-with-Revise","page":"Home","title":"Live Reload with Revise","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Pkg; Pkg.add(\"Revise\")\nusing Revise\nusing PioneerEntrapment\n\nRevise.includet(\"scripts/replicate_plot_example.txt\")\n\n# after edits in src/, just call again\nRevise.includet(\"scripts/replicate_plot_example.txt\")","category":"page"},{"location":"#Multi-run-comparison-(replicates)","page":"Home","title":"Multi-run comparison (replicates)","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Plot EFDR from multiple runs in a single figure (one color per method, solid lines per replicate).","category":"page"},{"location":"","page":"Home","title":"Home","text":"using PioneerEntrapment\n\nlibrary = \"/path/to/library/.poin/.poin\"\nrep1 = \"/path/to/run1/precursors_long.arrow\"\nrep2 = \"/path/to/run2/precursors_long.arrow\"\n\nreplicates = [\n  (precursor_results_path=rep1, library_precursors_path=library, label=\"run1\"),\n  (precursor_results_path=rep2, library_precursors_path=library, label=\"run2\"),\n]\n\nrun_efdr_replicate_plots(replicates;\n  output_dir=\"./efdr_compare\",\n  r_lib=1.0,\n  paired_stride=10,\n  plot_formats=[:png, :pdf],\n  verbose=true,\n)","category":"page"},{"location":"","page":"Home","title":"Home","text":"See the output directory for files named like efdr_comparison_replicates_global_prob.png.","category":"page"},{"location":"#CLI-via-config","page":"Home","title":"CLI via config","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"# JSON\nbin/pioneer-entrapment --mode replicates \\\n  --replicates-config scripts/replicates_example.json \\\n  --outdir ./efdr_compare --paired-step 10\n\n# YAML (requires YAML.jl)\nbin/pioneer-entrapment --mode replicates \\\n  --replicates-config scripts/replicates_example.yaml \\\n  --outdir ./efdr_compare --paired-step 10","category":"page"},{"location":"","page":"Home","title":"Home","text":"JSON expects an array of objects. YAML expects a top-level replicates: list with objects containing precursor_results_path, library_precursors_path, and optional label.","category":"page"},{"location":"#CLI-(replicates)-with-TOML-config","page":"Home","title":"CLI (replicates) with TOML config","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"JULIA_PROJECT=. bin/pioneer-entrapment --mode replicates \\\n  --replicates-config scripts/replicates_example.toml \\\n  --outdir ./efdr_compare --paired-step 10 --plot-formats png,pdf","category":"page"},{"location":"","page":"Home","title":"Home","text":"\\n+## Vector-friendly PDF output \\n+- Plots.jl + GR: text set to be editable (GR.setcharquality(0)).\\n+- Default font is Helvetica; override with using Plots; Plots.default(fontfamily=\\\"Arial\\\") or pass fontfamily to plot calls.\\n+- Include :pdf in plot_formats to save vector PDFs.","category":"page"}]
}
